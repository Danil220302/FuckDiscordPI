* checking system
CYGWIN detected
firewall type is windivert
* checking already running zapret processes
!!! WARNING. some dpi bypass processes already running !!!
!!! WARNING. blockcheck requires all DPI bypass methods disabled !!!
!!! WARNING. pls stop all dpi bypass instances that may interfere with blockcheck !!!
* checking prerequisites
* checking DNS
system DNS is working
comparing system resolver to public DNS : 8.8.8.8
pornhub.com : MISMATCH
-- system resolver :
66.254.114.41
-- 8.8.8.8 :
-- POSSIBLE DNS HIJACK DETECTED. ZAPRET WILL NOT HELP YOU IN CASE DNS IS SPOOFED !!!
-- DNS CHANGE OR DNSCRYPT MAY BE REQUIRED
* checking virtualization
cannot detect

NOTE ! this test should be run with zapret or any other bypass software disabled, without VPN

specify domain(s) to test. multiple domains are space separated.
domain(s) (default: rutracker.org) : ip protocol version(s) - 4, 6 or 46 for both (default: 4) : 
check http (default : Y) (Y/N) ? 
check https tls 1.2 (default : Y) (Y/N) ? 
TLS 1.3 uses encrypted ServerHello. DPI cannot check domain name in server response.
This can allow more bypass strategies to work.
What works for TLS 1.2 will also work for TLS 1.3 but not vice versa.
Most sites nowadays support TLS 1.3 but not all. If you can't find a strategy for TLS 1.2 use this test.
TLS 1.3 only strategy is better than nothing.
check https tls 1.3 (default : N) (Y/N) ? 
make sure target domain(s) support QUIC or result will be negative in any case
check http3 QUIC (default : Y) (Y/N) ? 
on limited systems like openwrt CA certificates might not be installed to preserve space
in such a case curl cannot verify server certificate and you should either install ca-bundle or disable verification
however disabling verification will break https check if ISP does MitM attack and substitutes server certificate
do not verify server certificate (default : N) (Y/N) ? 
sometimes ISPs use multiple DPIs or load balancing. bypass strategies may work unstable.
how many times to repeat each test (default: 1) : 
quick - scan as fast as possible to reveal any working strategy
standard - do investigation what works on your DPI
force - scan maximum despite of result
1 : quick
2 : standard
3 : force
your choice (default : standard) : selected : quick


* port block tests ipv4 discord.com:80
nc -z -w 2 162.159.137.232 80
Connection to 162.159.137.232 80 port [tcp/http] succeeded!
162.159.137.232 connects
nc -z -w 2 162.159.128.233 80
Connection to 162.159.128.233 80 port [tcp/http] succeeded!
162.159.128.233 connects
nc -z -w 2 162.159.135.232 80
Connection to 162.159.135.232 80 port [tcp/http] succeeded!
162.159.135.232 connects
nc -z -w 2 162.159.138.232 80
Connection to 162.159.138.232 80 port [tcp/http] succeeded!
162.159.138.232 connects
nc -z -w 2 162.159.136.232 80
Connection to 162.159.136.232 80 port [tcp/http] succeeded!
162.159.136.232 connects

* curl_test_http ipv4 discord.com
- checking without DPI bypass
curl: (28) Connection timed out after 2001 milliseconds
UNAVAILABLE code=28

- IP block tests (requires manual interpretation)
> testing iana.org on it's original ip
!!!!! AVAILABLE !!!!!
> testing discord.com on 192.0.43.8 (iana.org)
HTTP/1.1 302 Found
Location: https://www.iana.org/
> testing iana.org on 162.159.137.232 (discord.com)
HTTP/1.1 409 Conflict
> testing iana.org on 162.159.128.233 (discord.com)
HTTP/1.1 409 Conflict
> testing iana.org on 162.159.135.232 (discord.com)
HTTP/1.1 409 Conflict
> testing iana.org on 162.159.138.232 (discord.com)
HTTP/1.1 409 Conflict
> testing iana.org on 162.159.136.232 (discord.com)
HTTP/1.1 409 Conflict

preparing winws redirection
- checking winws --wf-l3=ipv4 --wf-tcp=80 --hostcase         
!!!!! AVAILABLE !!!!!
- checking winws --wf-l3=ipv4 --wf-tcp=80 --hostspell=hoSt         
!!!!! AVAILABLE !!!!!
- checking winws --wf-l3=ipv4 --wf-tcp=80 --hostnospace         
!!!!! AVAILABLE !!!!!
- checking winws --wf-l3=ipv4 --wf-tcp=80 --domcase         
!!!!! AVAILABLE !!!!!
- checking winws --wf-l3=ipv4 --wf-tcp=80 --dpi-desync=split2         
!!!!! AVAILABLE !!!!!

!!!!! curl_test_http: working strategy found for ipv4 discord.com : winws --hostcase !!!!!

clearing winws redirection

* port block tests ipv4 discord.com:443
nc -z -w 2 162.159.137.232 443
Connection to 162.159.137.232 443 port [tcp/https] succeeded!
162.159.137.232 connects
nc -z -w 2 162.159.128.233 443
Connection to 162.159.128.233 443 port [tcp/https] succeeded!
162.159.128.233 connects
nc -z -w 2 162.159.135.232 443
Connection to 162.159.135.232 443 port [tcp/https] succeeded!
162.159.135.232 connects
nc -z -w 2 162.159.138.232 443
Connection to 162.159.138.232 443 port [tcp/https] succeeded!
162.159.138.232 connects
nc -z -w 2 162.159.136.232 443
Connection to 162.159.136.232 443 port [tcp/https] succeeded!
162.159.136.232 connects

* curl_test_https_tls12 ipv4 discord.com
- checking without DPI bypass
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28

- IP block tests (requires manual interpretation)
> testing iana.org on it's original ip
!!!!! AVAILABLE !!!!!
> testing discord.com on 192.0.43.8 (iana.org)
curl: (28) Connection timed out after 2001 milliseconds
> testing iana.org on 162.159.137.232 (discord.com)
curl: (35) OpenSSL/3.3.1: error:0A000410:SSL routines::ssl/tls alert handshake failure
> testing iana.org on 162.159.128.233 (discord.com)
curl: (35) OpenSSL/3.3.1: error:0A000410:SSL routines::ssl/tls alert handshake failure
> testing iana.org on 162.159.135.232 (discord.com)
curl: (35) OpenSSL/3.3.1: error:0A000410:SSL routines::ssl/tls alert handshake failure
> testing iana.org on 162.159.138.232 (discord.com)
curl: (35) OpenSSL/3.3.1: error:0A000410:SSL routines::ssl/tls alert handshake failure
> testing iana.org on 162.159.136.232 (discord.com)
curl: (35) OpenSSL/3.3.1: error:0A000410:SSL routines::ssl/tls alert handshake failure

preparing winws redirection
- checking winws --wf-l3=ipv4 --wf-tcp=443 --dpi-desync=split2         
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-tcp=443 --dpi-desync=split2 --dpi-desync-split-tls=sni         
curl: (28) Connection timed out after 2001 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-tcp=443 --dpi-desync=split2 --dpi-desync-split-tls=sniext         
curl: (28) Connection timed out after 2001 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-tcp=443 --dpi-desync=split2 --dpi-desync-split-pos=1         
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-tcp=443 --dpi-desync=split2 --dpi-desync-split-pos=3         
curl: (28) Connection timed out after 2001 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-tcp=443 --dpi-desync=split2 --dpi-desync-split-pos=4         
curl: (28) Connection timed out after 2001 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-tcp=443 --dpi-desync=split2 --dpi-desync-split-pos=5         
curl: (28) Connection timed out after 2001 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-tcp=443 --dpi-desync=split2 --dpi-desync-split-pos=10         
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-tcp=443 --dpi-desync=split2 --dpi-desync-split-pos=50         
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-tcp=443 --dpi-desync=disorder2         
!!!!! AVAILABLE !!!!!

!!!!! curl_test_https_tls12: working strategy found for ipv4 discord.com : winws --dpi-desync=disorder2 !!!!!

clearing winws redirection

* curl_test_http3 ipv4 discord.com
- checking without DPI bypass
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28

preparing winws redirection
- checking winws --wf-l3=ipv4 --wf-udp=443 --dpi-desync=fake         
curl: (28) Connection timed out after 2001 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-udp=443 --dpi-desync=fake --dpi-desync-repeats=2         
curl: (28) Connection timed out after 2001 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-udp=443 --dpi-desync=fake --dpi-desync-repeats=5         
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-udp=443 --dpi-desync=fake --dpi-desync-repeats=10         
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-udp=443 --dpi-desync=fake --dpi-desync-repeats=20         
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-udp=443 --dpi-desync=ipfrag2 --dpi-desync-ipfrag-pos-udp=8         
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-udp=443 --dpi-desync=ipfrag2 --dpi-desync-ipfrag-pos-udp=16         
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-udp=443 --dpi-desync=ipfrag2 --dpi-desync-ipfrag-pos-udp=24         
curl: (28) Connection timed out after 2001 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-udp=443 --dpi-desync=ipfrag2 --dpi-desync-ipfrag-pos-udp=32         
curl: (28) Connection timed out after 2002 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-udp=443 --dpi-desync=ipfrag2 --dpi-desync-ipfrag-pos-udp=40         
curl: (28) Connection timed out after 2001 milliseconds
UNAVAILABLE code=28
- checking winws --wf-l3=ipv4 --wf-udp=443 --dpi-desync=ipfrag2 --dpi-desync-ipfrag-pos-udp=64         
curl: (28) Connection timed out after 2001 milliseconds
UNAVAILABLE code=28

curl_test_http3: winws strategy for ipv4 discord.com not found

clearing winws redirection

* SUMMARY
ipv4 discord.com curl_test_http : winws --wf-l3=ipv4 --wf-tcp=80 --hostcase
ipv4 discord.com curl_test_https_tls12 : winws --wf-l3=ipv4 --wf-tcp=443 --dpi-desync=disorder2
ipv4 discord.com curl_test_http3 : winws not working

Please note this SUMMARY does not guarantee a magic pill for you to copy/paste and be happy.
Understanding how strategies work is very desirable.
This knowledge allows to understand better which strategies to prefer and which to avoid if possible, how to combine strategies.
Blockcheck does it's best to prioritize good strategies but it's not bullet-proof.
It was designed not as magic pill maker but as a DPI bypass test tool.

press enter to continue
